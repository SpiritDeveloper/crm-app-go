basePath: /
consumes:
    - application/json
    - application/xml
definitions:
    CrateTransactionFlyway:
        properties:
            amount:
                format: int64
                type: integer
                x-go-name: Amount
            email:
                format: int64
                type: integer
                x-go-name: Email
            idTransaction:
                format: int64
                type: integer
                x-go-name: IdTransaction
            pspName:
                format: int64
                type: integer
                x-go-name: PspName
        type: object
        x-go-package: crm-app-go/dto/input
    DeleteMessage:
        properties:
            message:
                type: string
                x-go-name: Message
        type: object
        x-go-package: crm-app-go/docs
    ErrorMessage:
        properties:
            error:
                type: string
                x-go-name: Error
        type: object
        x-go-package: crm-app-go/docs
    LeadFlayway:
        properties:
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                format: date-time
                type: string
            ID:
                format: uint64
                type: integer
            UpdatedAt:
                format: date-time
                type: string
            accountId:
                type: string
                x-go-name: AccountId
            additionalInfo1:
                type: string
                x-go-name: AdditionalInfo1
            additionalInfo2:
                type: string
                x-go-name: AdditionalInfo2
            additionalInfo3:
                type: string
                x-go-name: AdditionalInfo3
            businessUnitId:
                type: string
                x-go-name: BusinessUnitId
            campaignId:
                type: string
                x-go-name: CampaignId
            email:
                type: string
                x-go-name: Email
            isoCountry:
                type: string
                x-go-name: IsoCountry
            lastName:
                type: string
                x-go-name: Lastname
            name:
                type: string
                x-go-name: Name
            password:
                type: string
                x-go-name: Password
            phone:
                type: string
                x-go-name: Phone
            registrationUrl:
                type: string
                x-go-name: RegistrationUrl
            subAffiliate:
                type: string
                x-go-name: SubAffiliate
            tag:
                type: string
                x-go-name: Tag
            tag1:
                type: string
                x-go-name: Tag1
            tpid:
                type: string
                x-go-name: Tpid
        type: object
        x-go-package: crm-app-go/model
    RegisterLeadFlywayRequestBody:
        properties:
            additionalInfo1:
                type: string
                x-go-name: AdditionalInfo1
            additionalInfo2:
                type: string
                x-go-name: AdditionalInfo2
            additionalInfo3:
                type: string
                x-go-name: AdditionalInfo3
            bussinesUnitId:
                format: int64
                type: integer
                x-go-name: BussinesUnitId
            campaignId:
                type: string
                x-go-name: CampaignId
            country_iso:
                type: string
                x-go-name: Country_iso
            email:
                type: string
                x-go-name: Email
            last_name:
                type: string
                x-go-name: Last_name
            name:
                type: string
                x-go-name: Name
            password:
                type: string
                x-go-name: Password
            phone_number:
                type: string
                x-go-name: Phone_number
            subAffiliate:
                type: string
                x-go-name: SubAffiliate
            tag:
                type: string
                x-go-name: Tag
            tag1:
                type: string
                x-go-name: Tag1
        type: object
        x-go-package: crm-app-go/dto/input
    User:
        properties:
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                format: date-time
                type: string
            ID:
                format: uint64
                type: integer
            UpdatedAt:
                format: date-time
                type: string
            email:
                type: string
                x-go-name: Email
            mobile:
                type: string
                x-go-name: Mobile
            name:
                type: string
                x-go-name: Name
        type: object
        x-go-package: crm-app-go/model
    UserRequestBody:
        properties:
            email:
                type: string
                x-go-name: Email
            mobile:
                type: string
                x-go-name: Mobile
            name:
                type: string
                x-go-name: Name
        type: object
        x-go-package: crm-app-go/docs
host: localhost
info:
    contact:
        email: roberto.espiritu@platimex.com.mx
        name: Roberto Espiritu
    license:
        name: MIT
        url: http://opensource.org/licenses/MIT
    termsOfService: there are no TOS at this moment, use at your own risk we take no responsibility
    title: CRM API.
    version: 0.0.1
paths:
    /api/v1/flyway/register-transactions:
        post:
            description: Register transaction in crm flyway
            operationId: postRegisterTransactionParam
            parameters:
                - description: Transaction Request Body.
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/CrateTransactionFlyway'
            responses:
                "200":
                    $ref: '#/responses/createTransactionResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - Flyway
    /api/v1/flyway/register-user:
        post:
            description: Register new user in crm flyway
            operationId: postRegisterLead
            parameters:
                - description: Register new lead body request.
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/RegisterLeadFlywayRequestBody'
            responses:
                "200":
                    $ref: '#/responses/registerLeadResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - Flyway
    /api/v1/user:
        get:
            description: Fetch all users
            operationId: getUserId
            responses:
                "200":
                    $ref: '#/responses/getUserResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
        post:
            description: Create user
            operationId: postUserParam
            parameters:
                - description: User Request Body.
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/UserRequestBody'
            responses:
                "200":
                    $ref: '#/responses/userResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
    /api/v1/user/{ID}:
        delete:
            description: Delete user with given id
            operationId: delUserParam
            parameters:
                - description: User ID
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/delUserResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
        get:
            description: Get user details for given id
            operationId: getUserParam
            parameters:
                - description: User ID
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/userResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
        put:
            description: Update user details for given id
            operationId: putUserParam
            parameters:
                - description: User Request Body.
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/UserRequestBody'
                - description: User ID
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/userResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
    /api/v1/wallet/{ID}/transaction:
        get:
            description: Fetch transaction associated with given wallet id
            operationId: getTransactionParam
            parameters:
                - description: Wallet ID
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/getTransactionResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - Flyway
produces:
    - application/json
    - application/xml
responses:
    createTransactionResponse:
        description: Flyway Response Register new transaction
        headers:
            message:
                type: string
            payload: {}
        schema:
            $ref: '#/definitions/LeadFlayway'
    delUserResponse:
        description: User delete Response
        schema:
            $ref: '#/definitions/DeleteMessage'
    error400:
        description: Bad Request error Response | Validation error message or invalid json
        schema:
            $ref: '#/definitions/ErrorMessage'
    error404:
        description: Not Found error Response | Page not found or record not found
        schema:
            $ref: '#/definitions/ErrorMessage'
    error500:
        description: Internal server error Response | server is down or db constraint errors
        schema:
            $ref: '#/definitions/ErrorMessage'
    getUserResponse:
        description: User Response
        schema:
            items:
                $ref: '#/definitions/User'
            type: array
    registerLeadResponse:
        description: Flyway Response Register new lead in crm flyway
        headers:
            message:
                type: string
            payload: {}
        schema:
            $ref: '#/definitions/LeadFlayway'
    userResponse:
        description: User Response
        schema:
            $ref: '#/definitions/User'
schemes:
    - http
    - https
swagger: "2.0"
x-meta-array:
    - value1
    - value2
x-meta-array-obj:
    - name: obj
      value: field
x-meta-value: value
