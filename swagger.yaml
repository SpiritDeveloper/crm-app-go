basePath: /
consumes:
    - application/json
definitions:
    DeleteMessage:
        properties:
            message:
                type: string
                x-go-name: Message
        type: object
        x-go-package: crm-app-go/docs
    ErrorMessage:
        properties:
            error:
                type: string
                x-go-name: Error
        type: object
        x-go-package: crm-app-go/docs
    User:
        properties:
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                format: date-time
                type: string
            ID:
                format: uint64
                type: integer
            UpdatedAt:
                format: date-time
                type: string
            email:
                type: string
                x-go-name: Email
            mobile:
                type: string
                x-go-name: Mobile
            name:
                type: string
                x-go-name: Name
        type: object
        x-go-package: crm-app-go/model
    UserRequestBody:
        properties:
            email:
                type: string
                x-go-name: Email
            mobile:
                type: string
                x-go-name: Mobile
            name:
                type: string
                x-go-name: Name
        type: object
        x-go-package: crm-app-go/docs
host: localhost:3000
info:
    description: Documentation of our awesome API.
    title: awesome.
    version: 1.0.0
paths:
    /api/v1/user:
        get:
            description: Fetch all users
            operationId: getUserId
            responses:
                "200":
                    $ref: '#/responses/getUserResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
        post:
            description: Create user
            operationId: postUserParam
            parameters:
                - description: User Request Body.
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/UserRequestBody'
            responses:
                "200":
                    $ref: '#/responses/userResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
    /api/v1/user/{ID}:
        delete:
            description: Delete user with given id
            operationId: delUserParam
            parameters:
                - description: User ID
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/delUserResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
        get:
            description: Get user details for given id
            operationId: getUserParam
            parameters:
                - description: User ID
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/userResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
        put:
            description: Update user details for given id
            operationId: putUserParam
            parameters:
                - description: User Request Body.
                  in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/UserRequestBody'
                - description: User ID
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/userResponse'
                "400":
                    $ref: '#/responses/error400'
                "404":
                    $ref: '#/responses/error404'
                "500":
                    $ref: '#/responses/error500'
            tags:
                - User
produces:
    - application/json
responses:
    delUserResponse:
        description: User delete Response
        schema:
            $ref: '#/definitions/DeleteMessage'
    error400:
        description: Bad Request error Response | Validation error message or invalid json
        schema:
            $ref: '#/definitions/ErrorMessage'
    error404:
        description: Not Found error Response | Page not found or record not found
        schema:
            $ref: '#/definitions/ErrorMessage'
    error500:
        description: Internal server error Response | server is down or db constraint errors
        schema:
            $ref: '#/definitions/ErrorMessage'
    getUserResponse:
        description: User Response
        schema:
            items:
                $ref: '#/definitions/User'
            type: array
    userResponse:
        description: User Response
        schema:
            $ref: '#/definitions/User'
schemes:
    - http
swagger: "2.0"
